<!DOCTYPE html>
<html>
<head>
<style>
body{background-color:gray}
div{margin:1em auto}
</style>
</head>
<body>
<div id="page1" style="position:relative;width:612pt;height:792pt;background-color:white">
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:65pt;left:81pt"><b><span style="font-family:LinLibertineTB,serif;font-size:20.6625pt">ChatLSP: Making Language Servers Do More for</span></b></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:89pt;left:72pt"><b><span style="font-family:LinLibertineTB,serif;font-size:20.6625pt">Statically Contextualizing Large Language Models</span></b></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:122pt;left:264pt"><span style="font-family:LinLibertineT,serif;font-size:11.9552pt">June Hyung Kim</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:136pt;left:259pt"><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">University of Michigan</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:148pt;left:272pt"><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">Ann Arbor, USA</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:167pt;left:54pt"><b><span style="font-family:LinLibertineTB,serif;font-size:11.9552pt">Abstract</span></b></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:183pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.907654pt">Developer tooling is crucial for developer productivity. Lan-</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:195pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.862471pt">guage Server Protocol, in particular, allow language features</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:207pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">to be communicated to editors without having to rely on</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:219pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">hacky editor magic. However, current implementations of</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:231pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.957618pt">the protocol do not adequately support the meteoric rise in</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:243pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">demand for code completion via LLMs. LLMs are prone to</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:255pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">hallucination, and existing methods such as exhaustive re-</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:266pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.892615pt">trieval and RAG are limited by token size and inconsistency.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:278pt;left:53pt"><span style="font-family:LinLibertineT,serif;font-size:9.887598pt">Approaching this with a language semantics-based retrieval</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:290pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">can have benefits over unstructured approaches, but LSP</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:302pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.957618pt">currently do not expose an interface for static retrieval. We</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:314pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">propose a conservative addendum to the Language Server</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:326pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">Protocol, ChatLSP, to address this issue.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:348pt;left:53pt"><b><span style="font-family:LinLibertineTB,serif;font-size:8.9664pt">ACM Reference Format:</span></b></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:358pt;left:53pt"><span style="font-family:LinLibertineT,serif;font-size:9.05562pt">June Hyung Kim. 2024. ChatLSP: Making Language Servers Do</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:369pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.05562pt">More for Statically Contextualizing Large Language Models. In</span><i><span style="font-family:LinLibertineTI,serif;font-size:9.05562pt"> .</span></i></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:380pt;left:53pt"><span style="font-family:LinLibertineT,serif;font-size:8.876284pt">ACM, New York, NY, USA,</span><span style="font-family:LinLibertineT,serif;font-size:8.876284pt;color:#4c00d8"> 3</span><span style="font-family:LinLibertineT,serif;font-size:8.876284pt"> pages.</span><span style="font-family:LinBiolinumT,serif;font-size:8.876284pt;color:#0035c9"> https://doi.org/10.1145/nnnnnnn.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:393pt;left:54pt"><span style="font-family:LinBiolinumT,serif;font-size:8.9664pt;color:#0035c9">nnnnnnn</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:420pt;left:54pt"><b><span style="font-family:LinLibertineTB,serif;font-size:11.9552pt">1</span></b></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:420pt;left:72pt"><b><span style="font-family:LinLibertineTB,serif;font-size:11.9552pt">Introduction and Background</span></b></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:435pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.862471pt">One of the biggest advancements in the tooling ecosystem is</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:447pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.972557pt">the Language Server Protocol [</span><span style="font-family:LinLibertineT,serif;font-size:9.9626pt;color:#4c00d8">8</span><span style="font-family:LinLibertineT,serif;font-size:9.972557pt">], which provides a unified</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:459pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.952632pt">interface for linking language and editor features. Recently,</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:471pt;left:53pt"><span style="font-family:LinLibertineT,serif;font-size:9.862471pt">we&#x2019;ve seen an explosion at the juncture of editor tooling and</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:483pt;left:53pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">AI, with GitHub Copilot [</span><span style="font-family:LinLibertineT,serif;font-size:9.9626pt;color:#4c00d8">3</span><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">] leading the charge, promising</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:495pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:10.056799pt">to help developers. However, these AI tools are also prone</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:507pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.862471pt">to hallucination, suggesting statically incorrect code or stati-</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:519pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.862471pt">cally correct code that exhibits runtime errors. Ameliorating</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:531pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.882578pt">these negative effects can be done by feeding the LLM more</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:543pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.862471pt">information about the codebase. Because costs increase with</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:555pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.952632pt">token count [</span><span style="font-family:LinLibertineT,serif;font-size:9.9626pt;color:#4c00d8">2</span><span style="font-family:LinLibertineT,serif;font-size:9.952632pt">,</span><span style="font-family:LinLibertineT,serif;font-size:9.9626pt;color:#4c00d8"> 6</span><span style="font-family:LinLibertineT,serif;font-size:9.952632pt">], methods such as RAG [</span><span style="font-family:LinLibertineT,serif;font-size:9.9626pt;color:#4c00d8">4</span><span style="font-family:LinLibertineT,serif;font-size:9.952632pt">] are commonly</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:585pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:8.049406pt">Permission to make digital or hard copies of all or part of this work for</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:595pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:8.049406pt">personal or classroom use is granted without fee provided that copies</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:605pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:8.049406pt">are not made or distributed for profit or commercial advantage and that</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:614pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:8.049406pt">copies bear this notice and the full citation on the first page. Copyrights</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:624pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:8.049406pt">for components of this work owned by others than the author(s) must</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:634pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:8.049406pt">be honored. Abstracting with credit is permitted. To copy otherwise, or</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:644pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:7.8899967pt">republish, to post on servers or to redistribute to lists, requires prior specific</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:654pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:7.9701pt">permission and/or a fee. Request permissions from permissions@acm.org.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:667pt;left:54pt"><i><span style="font-family:LinLibertineTI,serif;font-size:7.9701pt">Conference&#x2019;17, July 2017, Washington, DC, USA</span></i></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:676pt;left:53pt"><span style="font-family:LinLibertineT,serif;font-size:7.9701pt">&#xa9;</span><span style="font-family:LinLibertineT,serif;font-size:7.9701pt"> 2024 Copyright held by the owner/author(s). Publication rights licensed</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:686pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:7.9701pt">to ACM.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:696pt;left:53pt"><span style="font-family:LinLibertineT,serif;font-size:7.9701pt">ACM ISBN 978-x-xxxx-xxxx-x/YY/MM</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:708pt;left:54pt"><span style="font-family:LinBiolinumT,serif;font-size:7.9701pt;color:#0035c9">https://doi.org/10.1145/nnnnnnn.nnnnnnn</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:168pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.862471pt">used. This is not ideal, though, as it only grabs seemingly rel-</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:180pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.862471pt">evant tokens based on imperfect heuristics. Treating code as</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:192pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.862471pt">more than mere tokens by using static retrieval cleanly links</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:204pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.96758pt">the completion site to type and value definitions elsewhere</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:216pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">in the codebase [</span><span style="font-family:LinLibertineT,serif;font-size:9.9626pt;color:#4c00d8">1</span><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">].</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:228pt;left:327pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">We define static retrieval as the action of retrieving ex-</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:240pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">pected types, relevant types, and relevant headers.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:266pt;left:337pt"><b><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt;color:#007f00">type</span></b><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt"> Amount</span><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt;color:#666666"> =</span><b><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt;color:#af003f"> number</span></b><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt">;</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:278pt;left:337pt"><b><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt;color:#007f00">type</span></b><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt"> Currency</span><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt;color:#666666"> =</span><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt"> Dollar</span><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt;color:#666666"> |</span><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt"> Euro;</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:290pt;left:337pt"><b><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt;color:#007f00">type</span></b><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt"> Transaction</span><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt;color:#666666"> =</span><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt"> [Amount, Currency];</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:302pt;left:337pt"><b><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt;color:#007f00">const</span></b><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt"> createAmount</span><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt;color:#666666"> =</span><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt"> (n</span><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt;color:#666666">:</span><b><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt;color:#af003f"> number</span></b><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt">)</span><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt;color:#666666">:</span><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt"> Amount =&gt; {</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:314pt;left:357pt"><b><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt;color:#007f00">return</span></b><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt;color:#007f00"> Math</span><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt">.round(n</span><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt;color:#666666"> * 100</span><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt">)</span><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt;color:#666666"> / 100</span><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt">;</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:326pt;left:337pt"><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt">}</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:338pt;left:337pt"><b><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt;color:#007f00">const</span></b><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt"> withdraw</span><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt;color:#666666"> =</span><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt"> (n</span><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt;color:#666666">:</span><b><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt;color:#af003f"> number</span></b><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt">)</span><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt;color:#666666">:</span><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt"> Transaction =&gt;</span><span style="font-family:Inconsolatazi4,serif;font-size:9.9626pt;color:#666666"> ??</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:360pt;left:357pt"><b><span style="font-family:LinLibertineTB,serif;font-size:9.9626pt">Figure 1.</span></b><span style="font-family:LinLibertineT,serif;font-size:9.9626pt"> Example TypeScript Program</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:386pt;left:327pt"><span style="font-family:LinLibertineT,serif;font-size:9.982505pt">Fig.</span><span style="font-family:LinLibertineT,serif;font-size:9.982505pt;color:#4c00d8"> 1</span><span style="font-family:LinLibertineT,serif;font-size:9.982505pt"> shows an example TypeScript Program for demon-</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:398pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.882578pt">stration purposes. The</span><i><span style="font-family:LinLibertineTI,serif;font-size:9.882578pt"> ??</span></i><span style="font-family:LinLibertineT,serif;font-size:9.882578pt"> represents a typed hole, an incom-</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:410pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.862471pt">plete portion of the code. Similar concepts exist in languages</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:422pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">such as Agda [</span><span style="font-family:LinLibertineT,serif;font-size:9.9626pt;color:#4c00d8">9</span><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">] or Haskell [</span><span style="font-family:LinLibertineT,serif;font-size:9.9626pt;color:#4c00d8">10</span><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">].</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:434pt;left:327pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">An expected type is the type of the hole. In Fig.</span><span style="font-family:LinLibertineT,serif;font-size:10.061732pt;color:#4c00d8"> 1</span><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">, the</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:445pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.867501pt">expected type is</span><i><span style="font-family:LinLibertineTI,serif;font-size:9.867501pt"> type withdraw = (n: number) =&gt; Transaction</span></i><span style="font-family:LinLibertineT,serif;font-size:9.867501pt">.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:457pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.892615pt">Relevant types is the list of types that may be related in any</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:469pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:10.022197pt">way to the expected type. The expected type can comprise</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:481pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">components that refer to other types, so we retrieve those</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:493pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">references. In Fig.</span><span style="font-family:LinLibertineT,serif;font-size:9.9626pt;color:#4c00d8"> 1</span><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">, the relevant types are the following:</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:510pt;left:333pt"><span style="font-family:txsys,serif;font-size:9.9626pt">&#x2022;</span><i><span style="font-family:LinLibertineTI,serif;font-size:9.9626pt"> type withdraw = (n: number) =&gt; Transaction</span></i></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:522pt;left:333pt"><span style="font-family:txsys,serif;font-size:9.9626pt">&#x2022;</span><i><span style="font-family:LinLibertineTI,serif;font-size:9.9626pt"> type Transaction = [Amount, Currency]</span></i></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:534pt;left:333pt"><span style="font-family:txsys,serif;font-size:9.9626pt">&#x2022;</span><i><span style="font-family:LinLibertineTI,serif;font-size:9.9626pt"> type Amount = number</span></i></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:546pt;left:333pt"><span style="font-family:txsys,serif;font-size:9.9626pt">&#x2022;</span><i><span style="font-family:LinLibertineTI,serif;font-size:9.9626pt"> type Currency = Dollar | Euro</span></i></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:556pt;left:333pt"><span style="font-family:txsys,serif;font-size:9.9626pt">&#x2022;</span><span style="font-family:LinLibertineT,serif;font-size:9.9626pt"> Types that</span><i><span style="font-family:LinLibertineTI,serif;font-size:9.9626pt"> Dollar</span></i><span style="font-family:LinLibertineT,serif;font-size:9.9626pt"> and</span><i><span style="font-family:LinLibertineTI,serif;font-size:9.9626pt"> Euro</span></i><span style="font-family:LinLibertineT,serif;font-size:9.9626pt"> refer to.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:570pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:10.037041pt">Relevant headers is the list of functions that we can call to</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:582pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">return the expected type, or parts of it. In Fig.</span><span style="font-family:LinLibertineT,serif;font-size:10.061732pt;color:#4c00d8"> 1</span><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">, the only</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:594pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">relevant header is</span><i><span style="font-family:LinLibertineTI,serif;font-size:9.9626pt"> createAmount</span></i><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:606pt;left:327pt"><span style="font-family:LinLibertineT,serif;font-size:9.862471pt">Determining what headers are relevant can be done through</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:618pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.862471pt">two steps: generating a list of target types, and finding head-</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:630pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.957618pt">ers whose types are consistent with any of the target types.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:642pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">Criteria for target types are as follows:</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:656pt;left:333pt"><span style="font-family:txsys,serif;font-size:9.9626pt">&#x2022;</span><span style="font-family:LinLibertineT,serif;font-size:9.9626pt"> The type of the hole itself.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:668pt;left:333pt"><span style="font-family:txsys,serif;font-size:9.9626pt">&#x2022;</span><span style="font-family:LinLibertineT,serif;font-size:9.9626pt"> If the hole is an arrow type, the return type.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:680pt;left:333pt"><span style="font-family:txsys,serif;font-size:9.9626pt">&#x2022;</span><span style="font-family:LinLibertineT,serif;font-size:9.9626pt"> If the hole is a product type, the component types.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:692pt;left:333pt"><span style="font-family:txsys,serif;font-size:9.9626pt">&#x2022;</span><span style="font-family:LinLibertineT,serif;font-size:10.061732pt"> Compound type definitions (cases where the return</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:704pt;left:342pt"><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">type is a product or a product has an arrow type).</span></p>
</div>
<div id="page2" style="position:relative;width:612pt;height:792pt;background-color:white">
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:47pt;left:54pt"><span style="font-family:LinBiolinumT,serif;font-size:7.9701pt">Conference&#x2019;17, July 2017, Washington, DC, USA</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:47pt;left:526pt"><span style="font-family:LinBiolinumT,serif;font-size:7.9701pt">Kim et al.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:70pt;left:53pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">There are many ways to determine type consistency, as</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:82pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.882578pt">this depends on the language implementation. One example</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:94pt;left:53pt"><span style="font-family:LinLibertineT,serif;font-size:9.862471pt">would be to use a checker function</span><i><span style="font-family:LinLibertineTI,serif;font-size:9.862471pt"> const checker = (h: HTyp):</span></i></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:106pt;left:54pt"><i><span style="font-family:LinLibertineTI,serif;font-size:10.017244pt">TTyp =&gt; return h</span></i><span style="font-family:LinLibertineT,serif;font-size:10.017244pt">, and check that substituting</span><i><span style="font-family:LinLibertineTI,serif;font-size:10.017244pt"> HTyp</span></i><span style="font-family:LinLibertineT,serif;font-size:10.017244pt"> for the</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:118pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.872529pt">header&#x2019;s type and</span><i><span style="font-family:LinLibertineTI,serif;font-size:9.872529pt"> TTyp</span></i><span style="font-family:LinLibertineT,serif;font-size:9.872529pt"> for the target&#x2019;s type does not return</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:130pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">a static error when compiled.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:156pt;left:54pt"><b><span style="font-family:LinLibertineTB,serif;font-size:11.9552pt">2</span></b></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:156pt;left:72pt"><b><span style="font-family:LinLibertineTB,serif;font-size:11.859173pt">Limitations of Modern Developer Tooling</span></b></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:171pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.932667pt">Current implementations of developer tooling such as LSPs</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:183pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">and static analysis tools do not operate at a granular type-</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:195pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">based level capable of the aforementioned static retrieval.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:221pt;left:54pt"><b><span style="font-family:LinLibertineTB,serif;font-size:9.9626pt">2.1</span></b></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:221pt;left:76pt"><b><span style="font-family:LinLibertineTB,serif;font-size:9.9626pt">Limitations of the Language Server Protocol</span></b></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:235pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.862471pt">Language servers are capable of retrieving static information</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:247pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.862471pt">from a codebase. Particularly, modern language servers often</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:259pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">have the ability to retrieve the expected type of an expres-</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:270pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:10.037041pt">sion, the relevant types, and the relevant function headers.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:282pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.862471pt">However, the current Language Server Protocol [</span><span style="font-family:LinLibertineT,serif;font-size:9.9626pt;color:#4c00d8">7</span><span style="font-family:LinLibertineT,serif;font-size:9.862471pt">] does not</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:294pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">provide an interface to capitalize on this. Because of this,</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:306pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:10.041985pt">static retrieval must be done by hacking together different</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:318pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">LSP methods in a recursive algorithm.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:336pt;left:69pt"><span style="font-family:txsys,serif;font-size:9.9626pt">&#x2022;</span><span style="font-family:LinLibertineT,serif;font-size:9.9626pt"> Get the current cursor location.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:348pt;left:69pt"><span style="font-family:txsys,serif;font-size:9.9626pt">&#x2022;</span><span style="font-family:LinLibertineT,serif;font-size:9.9626pt"> Get the enclosing declaration.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:360pt;left:69pt"><span style="font-family:txsys,serif;font-size:9.9626pt">&#x2022;</span><span style="font-family:LinLibertineT,serif;font-size:9.9626pt"> Get the type of the expression inside.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:372pt;left:69pt"><span style="font-family:txsys,serif;font-size:9.9626pt">&#x2022;</span><span style="font-family:LinLibertineT,serif;font-size:10.061732pt"> Step into the expression&#x2019;s component types, and re-</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:384pt;left:78pt"><span style="font-family:LinLibertineT,serif;font-size:9.902643pt">curse. For example, in Fig.</span><span style="font-family:LinLibertineT,serif;font-size:9.902643pt;color:#4c00d8"> 1</span><span style="font-family:LinLibertineT,serif;font-size:9.902643pt">, if the expression at hand</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:396pt;left:78pt"><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">is</span><i><span style="font-family:LinLibertineTI,serif;font-size:9.9626pt"> Currency</span></i><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">, recurse on</span><i><span style="font-family:LinLibertineTI,serif;font-size:9.9626pt"> Dollar</span></i><span style="font-family:LinLibertineT,serif;font-size:9.9626pt"> and</span><i><span style="font-family:LinLibertineTI,serif;font-size:9.9626pt"> Euro</span></i><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:413pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.912662pt">Clients can request one specific method, but cannot request</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:425pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">for a series of methods in a programmatic manner. Such</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:437pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">action would require a custom method that the client can</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:449pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.942655pt">call once, and the language server to execute the tasks. Our</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:461pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:10.007331pt">research showed that type and header extraction is not im-</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:473pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">plemented yet. Given the importance of extracting static</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:485pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.932667pt">information and the capabilities of language servers, we be-</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:497pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">lieve that this is a missed opportunity.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:523pt;left:54pt"><b><span style="font-family:LinLibertineTB,serif;font-size:9.9626pt">2.2</span></b></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:523pt;left:76pt"><b><span style="font-family:LinLibertineTB,serif;font-size:9.9626pt">Limitations of Other Static Analysis Tools</span></b></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:537pt;left:53pt"><span style="font-family:LinLibertineT,serif;font-size:9.862471pt">Another popular static analysis tool is CodeQL [</span><span style="font-family:LinLibertineT,serif;font-size:9.9626pt;color:#4c00d8">5</span><span style="font-family:LinLibertineT,serif;font-size:9.862471pt">] by GitHub.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:548pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">CodeQL first generates a database over a repository, then</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:560pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.992443pt">gives the developers the ability to write queries on specific</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:572pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.877555pt">elements, AST nodes, and more. In principle this is the ideal</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:584pt;left:53pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">way to extract information. Code, by definition, is more</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:596pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.942655pt">than just text and cursor positions - it is semantic data, and</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:608pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">querying for specific data inherently makes sense.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:620pt;left:63pt"><span style="font-family:LinLibertineT,serif;font-size:10.002371pt">CodeQL, however, is not without its flaws. The database</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:632pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">is created over a snapshot of the codebase, so it does not</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:644pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.862471pt">incrementally expand with the addition of new code - it must</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:656pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:9.892615pt">be re-created every time a new change occurs. Furthermore,</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:668pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">the overhead is non-negligible - creating a database takes</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:680pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">a considerable amount of time, and developers must also</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:692pt;left:53pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">write separate queries in CodeQL&#x2019;s own domain-specific</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:704pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:10.041985pt">language QL. We believe that developers should be able to</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:70pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">do relatively simple things such as static retrieval without</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:82pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">writing complicated queries.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:106pt;left:317pt"><b><span style="font-family:LinLibertineTB,serif;font-size:11.9552pt">3</span></b></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:106pt;left:336pt"><b><span style="font-family:LinLibertineTB,serif;font-size:11.9552pt">Extending the Protocol</span></b></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:121pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">An ideal system should have the the following qualities:</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:137pt;left:333pt"><span style="font-family:txsys,serif;font-size:9.9626pt">&#x2022;</span><span style="font-family:LinLibertineT,serif;font-size:10.061732pt"> Extract static information, particularly the expected</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:149pt;left:342pt"><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">type, relevant types, and relevant headers.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:161pt;left:333pt"><span style="font-family:txsys,serif;font-size:9.9626pt">&#x2022;</span><span style="font-family:LinLibertineT,serif;font-size:9.9626pt"> Fast, actions should be completed in milliseconds.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:173pt;left:333pt"><span style="font-family:txsys,serif;font-size:9.9626pt">&#x2022;</span><span style="font-family:LinLibertineT,serif;font-size:9.932667pt"> Easy to use, and developers who use an editor should</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:185pt;left:342pt"><span style="font-family:LinLibertineT,serif;font-size:9.862471pt">not have to learn thrid-party tools to reap the benefits</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:197pt;left:342pt"><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">of static retrieval.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:209pt;left:333pt"><span style="font-family:txsys,serif;font-size:9.9626pt">&#x2022;</span><span style="font-family:LinLibertineT,serif;font-size:9.9626pt"> React to future code changes.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:224pt;left:327pt"><span style="font-family:LinLibertineT,serif;font-size:9.992443pt">Given these limitations, many third-party static analysis</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:236pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.862471pt">tools are out of question. Language servers are still incredibly</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:248pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.982505pt">attractive options - they benefit from being extendable and</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:260pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">capable of accomplishing tasks in milliseconds. Therefore,</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:272pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">instead of reinventing the wheel, we decide to propose a</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:284pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">conservative addendum to the Language Server Protocol.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:296pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">This comprises five new methods.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:313pt;left:333pt"><span style="font-family:txsys,serif;font-size:9.9626pt">&#x2022;</span><i><span style="font-family:LinLibertineTI,serif;font-size:9.9626pt"> textDocument/expectedType</span></i></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:325pt;left:333pt"><span style="font-family:txsys,serif;font-size:9.9626pt">&#x2022;</span><i><span style="font-family:LinLibertineTI,serif;font-size:9.9626pt"> textDocument/relevantTypes</span></i></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:337pt;left:333pt"><span style="font-family:txsys,serif;font-size:9.9626pt">&#x2022;</span><i><span style="font-family:LinLibertineTI,serif;font-size:9.9626pt"> textDocument/relevantHeaders</span></i></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:349pt;left:333pt"><span style="font-family:txsys,serif;font-size:9.9626pt">&#x2022;</span><i><span style="font-family:LinLibertineTI,serif;font-size:9.9626pt"> textDocument/llmCompletion</span></i></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:361pt;left:333pt"><span style="font-family:txsys,serif;font-size:9.9626pt">&#x2022;</span><i><span style="font-family:LinLibertineTI,serif;font-size:9.9626pt"> textDocument/llmCompletionResolveErrors</span></i></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:374pt;left:327pt"><i><span style="font-family:LinLibertineTI,serif;font-size:10.022197pt">textDocument/expectedType</span></i><span style="font-family:LinLibertineT,serif;font-size:10.022197pt"> returns the expected type of</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:386pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">an incomplete expression.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:398pt;left:327pt"><i><span style="font-family:LinLibertineTI,serif;font-size:9.957618pt">textDocument/relevantTypes</span></i><span style="font-family:LinLibertineT,serif;font-size:9.957618pt"> returns a list of strings, each</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:410pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.862471pt">representing a type definition that may be relevant at a given</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:422pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.922668pt">cursor location. The returned list contains components that</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:434pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">can be used to build up the expected type.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:446pt;left:327pt"><i><span style="font-family:LinLibertineTI,serif;font-size:9.862471pt">textDocument/relevantHeaders</span></i><span style="font-family:LinLibertineT,serif;font-size:9.862471pt"> returns a list of strings, each</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:458pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.862471pt">representing a function header that we can call to return the</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:470pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">expected type, or part of it, at a given cursor location.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:482pt;left:327pt"><i><span style="font-family:LinLibertineTI,serif;font-size:9.887598pt">textDocument/llmCompletion</span></i><span style="font-family:LinLibertineT,serif;font-size:9.887598pt"> works similarly to the previ-</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:494pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.862471pt">ously existing completion method, but uses LLM to complete</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:506pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:10.002371pt">the code, akin to GitHub copilot. The result is immediately</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:518pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">visible in the editor, and users will be able to tab through</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:530pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">different completions.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:542pt;left:327pt"><i><span style="font-family:LinLibertineTI,serif;font-size:9.92767pt">textDocument/llmCompletionResolveErrors</span></i><span style="font-family:LinLibertineT,serif;font-size:9.92767pt"> will attempt to</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:554pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:10.051864pt">resolve incorrect completions by using error rounds, itera-</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:566pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.862471pt">tively fixing the generated code by replying with static errors</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:578pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">and prompting for a corrected version.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:601pt;left:317pt"><b><span style="font-family:LinLibertineTB,serif;font-size:11.9552pt">4</span></b></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:601pt;left:336pt"><b><span style="font-family:LinLibertineTB,serif;font-size:11.9552pt">Future Work</span></b></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:617pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">We are in the process of creating a Visual Studio Code ex-</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:629pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">tension that uses this extended language server. We hope</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:641pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">to test this with developers and conduct a study on devel-</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:653pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:10.061732pt">oper productivity versus current implementations of LSP</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:665pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">and Copilot.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:688pt;left:317pt"><b><span style="font-family:LinLibertineTB,serif;font-size:11.9552pt">Acknowledgments</span></b></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:704pt;left:317pt"><span style="font-family:LinLibertineT,serif;font-size:9.9626pt">To Dr. Cyrus Omar and Andrew Blinn for the late nights.</span></p>
</div>
<div id="page3" style="position:relative;width:612pt;height:792pt;background-color:white">
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:47pt;left:54pt"><span style="font-family:LinBiolinumT,serif;font-size:7.9701pt">ChatLSP: Making Language Servers Do More for Statically Contextualizing Large Language Models</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:47pt;left:401pt"><span style="font-family:LinBiolinumT,serif;font-size:7.9701pt">Conference&#x2019;17, July 2017, Washington, DC, USA</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:69pt;left:54pt"><b><span style="font-family:LinLibertineTB,serif;font-size:11.9552pt">References</span></b></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:85pt;left:57pt"><span style="font-family:LinLibertineT,serif;font-size:7.9701pt">[1]</span><span style="font-family:LinLibertineT,serif;font-size:8.049406pt"> Andrew Blinn, Xiang Li, June Hyung Kim, and Cyrus Omar. 2024.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:95pt;left:71pt"><span style="font-family:LinLibertineT,serif;font-size:7.9541437pt">Statically Contextualizing Large Language Models with Typed Holes.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:105pt;left:70pt"><span style="font-family:LinLibertineT,serif;font-size:7.9701pt">(2024).</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:115pt;left:57pt"><span style="font-family:LinLibertineT,serif;font-size:7.9701pt">[2]</span><span style="font-family:LinLibertineT,serif;font-size:8.049406pt"> Yiran Ding, Li Lyna Zhang, Chengruidong Zhang, Yuanyuan Xu,</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:125pt;left:71pt"><span style="font-family:LinLibertineT,serif;font-size:8.049406pt">Ning Shang, Jiahang Xu, Fan Yang, and Mao Yang. 2024.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:125pt;left:279pt"><span style="font-family:LinLibertineT,serif;font-size:8.049406pt">Lon-</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:135pt;left:71pt"><span style="font-family:LinLibertineT,serif;font-size:8.049406pt">gRoPE: Extending LLM Context Window Beyond 2 Million Tokens.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:145pt;left:71pt"><span style="font-family:LinLibertineT,serif;font-size:7.9701pt">arXiv:</span><span style="font-family:LinLibertineT,serif;font-size:7.9701pt;color:#0035c9">2402.13753</span><span style="font-family:LinLibertineT,serif;font-size:7.9701pt"> [cs.CL]</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:155pt;left:57pt"><span style="font-family:LinLibertineT,serif;font-size:7.9701pt">[3]</span><span style="font-family:LinLibertineT,serif;font-size:8.049406pt"> Nat Friedman. 2021. Introducing GitHub Copilot: your AI pair pro-</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:165pt;left:71pt"><span style="font-family:LinLibertineT,serif;font-size:7.8899967pt">grammer.</span><span style="font-family:LinBiolinumT,serif;font-size:7.8899967pt;color:#0035c9"> https://github.blog/2021-06-29-introducing-github-copilot-</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:177pt;left:71pt"><span style="font-family:LinBiolinumT,serif;font-size:7.9701pt;color:#0035c9">ai-pair-programmer/</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:185pt;left:57pt"><span style="font-family:LinLibertineT,serif;font-size:7.9701pt">[4]</span><span style="font-family:LinLibertineT,serif;font-size:8.049406pt"> Yunfan Gao, Yun Xiong, Xinyu Gao, Kangxiang Jia, Jinliu Pan, Yuxi</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:195pt;left:71pt"><span style="font-family:LinLibertineT,serif;font-size:8.049406pt">Bi, Yi Dai, Jiawei Sun, Qianyu Guo, Meng Wang, and Haofen Wang.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:205pt;left:71pt"><span style="font-family:LinLibertineT,serif;font-size:7.8899967pt">2023. Retrieval-Augmented Generation for Large Language Models: A</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:215pt;left:71pt"><span style="font-family:LinLibertineT,serif;font-size:7.9541437pt">Survey.</span><i><span style="font-family:LinLibertineTI,serif;font-size:7.9541437pt"> CoRR</span></i><span style="font-family:LinLibertineT,serif;font-size:7.9541437pt"> abs/2312.10997 (2023).</span><span style="font-family:LinBiolinumT,serif;font-size:7.9541437pt;color:#0035c9"> https://doi.org/10.48550/ARXIV.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:225pt;left:71pt"><span style="font-family:LinBiolinumT,serif;font-size:7.9701pt;color:#0035c9">2312.10997</span><span style="font-family:LinLibertineT,serif;font-size:7.9701pt"> arXiv:</span><span style="font-family:LinLibertineT,serif;font-size:7.9701pt;color:#0035c9">2312.10997</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:235pt;left:57pt"><span style="font-family:LinLibertineT,serif;font-size:7.9701pt">[5] GitHub. [n. d.]. codeql.</span><span style="font-family:LinBiolinumT,serif;font-size:7.9701pt;color:#0035c9"> https://codeql.github.com</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:245pt;left:57pt"><span style="font-family:LinLibertineT,serif;font-size:7.9701pt">[6]</span><span style="font-family:LinLibertineT,serif;font-size:8.049406pt"> Jordan Hoffmann, Sebastian Borgeaud, Arthur Mensch, Elena</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:255pt;left:71pt"><span style="font-family:LinLibertineT,serif;font-size:8.049406pt">Buchatskaya, Trevor Cai, Eliza Rutherford, Diego de Las Casas,</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:265pt;left:71pt"><span style="font-family:LinLibertineT,serif;font-size:8.04546pt">Lisa Anne Hendricks, Johannes Welbl, Aidan Clark, Tom Hennigan,</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:275pt;left:71pt"><span style="font-family:LinLibertineT,serif;font-size:7.8899967pt">Eric Noland, Katie Millican, George van den Driessche, Bogdan Damoc,</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:285pt;left:70pt"><span style="font-family:LinLibertineT,serif;font-size:8.025697pt">Aurelia Guy, Simon Osindero, Karen Simonyan, Erich Elsen, Jack W.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:295pt;left:71pt"><span style="font-family:LinLibertineT,serif;font-size:7.8899967pt">Rae, Oriol Vinyals, and Laurent Sifre. 2022. Training Compute-Optimal</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:305pt;left:71pt"><span style="font-family:LinLibertineT,serif;font-size:7.9701pt">Large Language Models. arXiv:</span><span style="font-family:LinLibertineT,serif;font-size:7.9701pt;color:#0035c9">2203.15556</span><span style="font-family:LinLibertineT,serif;font-size:7.9701pt"> [cs.CL]</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:315pt;left:57pt"><span style="font-family:LinLibertineT,serif;font-size:7.9701pt">[7]</span><span style="font-family:LinLibertineT,serif;font-size:8.049406pt"> Microsoft. [n. d.].</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:315pt;left:146pt"><span style="font-family:LinLibertineT,serif;font-size:8.049406pt">Language Server Protocol Specification -</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:325pt;left:71pt"><span style="font-family:LinLibertineT,serif;font-size:8.049406pt">3.17.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:326pt;left:117pt"><span style="font-family:LinBiolinumT,serif;font-size:8.049406pt;color:#0035c9">https://microsoft.github.io/language-server-protocol/</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:336pt;left:71pt"><span style="font-family:LinBiolinumT,serif;font-size:7.9701pt;color:#0035c9">specifications/lsp/3.17/specification/</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:344pt;left:57pt"><span style="font-family:LinLibertineT,serif;font-size:7.9701pt">[8]</span><span style="font-family:LinLibertineT,serif;font-size:7.9939749pt"> Microsoft. [n. d.]. Official Page for Language Server Protocol.</span><span style="font-family:LinBiolinumT,serif;font-size:7.9939749pt;color:#0035c9"> https:</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:356pt;left:70pt"><span style="font-family:LinBiolinumT,serif;font-size:7.9701pt;color:#0035c9">//microsoft.github.io/language-server-protocol/</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:364pt;left:57pt"><span style="font-family:LinLibertineT,serif;font-size:7.9701pt">[9]</span><span style="font-family:LinLibertineT,serif;font-size:7.9141128pt"> The Agda Team. [n. d.]. Lexical Structures.</span><span style="font-family:LinBiolinumT,serif;font-size:7.9141128pt;color:#0035c9"> https://agda.readthedocs.</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:376pt;left:71pt"><span style="font-family:LinBiolinumT,serif;font-size:7.9701pt;color:#0035c9">io/en/v2.6.0.1/language/lexical-structure.html</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:384pt;left:54pt"><span style="font-family:LinLibertineT,serif;font-size:7.9701pt">[10]</span><span style="font-family:LinLibertineT,serif;font-size:8.049406pt"> The GHC Team. [n. d.].</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:384pt;left:173pt"><span style="font-family:LinLibertineT,serif;font-size:8.049406pt">7.14. Typed Holes, The Glorious</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:394pt;left:71pt"><span style="font-family:LinLibertineT,serif;font-size:8.049406pt">Glasgow Haskell Compilation System User&#x2019;s Guide, Version</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:404pt;left:70pt"><span style="font-family:LinLibertineT,serif;font-size:7.8899967pt">7.10.2.20151030.</span><span style="font-family:LinBiolinumT,serif;font-size:7.8899967pt;color:#0035c9"> https://downloads.haskell.org/~ghc/7.10.3-rc1/users_</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:416pt;left:71pt"><span style="font-family:LinBiolinumT,serif;font-size:7.9701pt;color:#0035c9">guide/typed-holes.html</span></p>
</div>
<div id="page4" style="position:relative;width:612pt;height:792pt;background-color:white">
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:47pt;left:54pt"><span style="font-family:LinBiolinumT,serif;font-size:7.9701pt">Conference&#x2019;17, July 2017, Washington, DC, USA</span></p>
<p style="position:absolute;white-space:pre;margin:0;padding:0;top:47pt;left:526pt"><span style="font-family:LinBiolinumT,serif;font-size:7.9701pt">Kim et al.</span></p>
</div>
</body>
</html>
