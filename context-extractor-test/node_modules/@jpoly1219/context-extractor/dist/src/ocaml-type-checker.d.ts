import { TypeChecker } from "./types";
export declare class OcamlTypeChecker implements TypeChecker {
    getIdentifierFromDecl(typeDecl: string): string;
    getTypeContextFromDecl(typeDecl: string): {
        identifier: string;
        span: string;
    } | null;
    checkPrimitive(typeDecl: string): {
        identifier: string;
        span: string;
        interestingIndex: number;
    } | null;
    checkImports(typeDecl: string): {
        identifier: string;
        span: string;
        interestingIndex: number;
    } | null;
    checkModule(typeDecl: string): {
        identifier: string;
        span: string;
        interestingIndex: number;
    } | null;
    checkObject(typeDecl: string): {
        identifier: string;
        span: string;
        interestingIndex: number;
    } | null;
    checkUnion(typeDecl: string): {
        identifier: string;
        span: string;
        interestingIndex: number;
    } | null;
    checkFunction(typeDecl: string): {
        identifier: string;
        span: string;
        interestingIndex: number;
    } | null;
    checkHole(typeDecl: string): {
        identifier: string;
        span: string;
    } | null;
    checkParameter(typeDecl: string): null;
    isTuple(typeSpan: string): boolean;
    isUnion(typeSpan: string): boolean;
    isArray(typeSpan: string): boolean;
    isObject(typeSpan: string): boolean;
    isFunction(typeSpan: string): boolean;
    isPrimitive(typeSpan: string): boolean;
    isTypeAlias(typeSpan: string): boolean;
    escapeQuotes(typeSpan: string): string;
    parseTypeArrayString(typeStr: string): string[];
}
